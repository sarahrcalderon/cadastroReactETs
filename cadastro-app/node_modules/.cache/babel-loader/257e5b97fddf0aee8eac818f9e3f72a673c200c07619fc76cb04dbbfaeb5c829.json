{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PICHAU\\\\testeTecnicoFrontend\\\\cadastro-app\\\\src\\\\Formulario.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, TextField, FormControl, FormLabel, FormHelperText, Typography } from '@mui/material';\nimport PersonIcon from '@mui/icons-material/Person';\nimport EmailIcon from '@mui/icons-material/Email';\nimport LockIcon from '@mui/icons-material/Lock';\nimport Paper from '@mui/material/Paper';\nimport { useTheme } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst emailsIndisponiveis = [\"teste@exemplo.com\", \"joao@exemplo.com\", \"maria@acme.net\"];\nconst inputDadosCadastro = {\n  nome: '',\n  email: '',\n  senha: '',\n  confirmacaoSenha: ''\n};\nconst Formulario = ({\n  mode\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [form, setForm] = useState(inputDadosCadastro);\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [showInfo, setShowInfo] = useState(false);\n  const validate = () => {\n    const errosDeValidacao = {};\n    if (!form.nome) errosDeValidacao.nome = 'Nome é obrigatório';\n    if (!form.email) {\n      errosDeValidacao.email = 'E-mail é obrigatório';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(form.email)) {\n      errosDeValidacao.email = 'E-mail inválido';\n    } else if (emailsIndisponiveis.includes(form.email)) {\n      errosDeValidacao.email = 'E-mail indisponível';\n    }\n    if (!form.senha) {\n      errosDeValidacao.senha = 'Senha é obrigatória';\n    } else {\n      if (form.senha.length < 8) errosDeValidacao.senha = 'Senha deve ter no mínimo 8 caracteres';\n      if (!/[a-z]/.test(form.senha)) errosDeValidacao.senha = '- Conter pelo menos 1 letra minúscula e maiúscula';\n      if (!/[A-Z]/.test(form.senha)) errosDeValidacao.senha = '';\n      if (!/[0-9]/.test(form.senha)) errosDeValidacao.senha = '- Conter pelo menos 1 número';\n    }\n    if (form.confirmacaoSenha !== form.senha) {\n      errosDeValidacao.confirmacaoSenha = 'Confirmação de senha deve ser igual à senha';\n    }\n    return errosDeValidacao;\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const validationErrors = validate();\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n    setErrors({});\n    setIsSubmitting(true);\n    try {\n      const response = await fetch('URL_DO_BACKEND', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-api-key': 'ECA1AB4CE8583613A2C759B445E98'\n        },\n        body: JSON.stringify(form)\n      });\n      if (response.status === 400) {\n        const data = await response.json();\n        setErrors({\n          [data.nomeCampo]: data.tipoErro === 'USUARIO_EXISTENTE' ? 'E-mail já cadastrado' : 'Campo inválido'\n        });\n      } else {\n        alert('Cadastro realizado com sucesso!');\n        setForm(inputDadosCadastro);\n      }\n    } catch (error) {\n      console.error('Erro na requisição:', error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const inputCadastro = (label, name, type = \"text\", icon, placeholder, error) => /*#__PURE__*/_jsxDEV(FormControl, {\n    style: {\n      marginBottom: '0.8rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      name: name,\n      type: type,\n      value: form[name],\n      onChange: handleChange,\n      onFocus: () => setShowInfo(name === 'senha'),\n      onBlur: () => setShowInfo(false),\n      error: Boolean(error),\n      InputProps: {\n        startAdornment: icon\n      },\n      placeholder: placeholder,\n      variant: \"outlined\",\n      fullWidth: true,\n      helperText: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), name === 'senha' && showInfo && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FormHelperText, {\n        style: {\n          fontSize: '0.75rem'\n        },\n        children: \"- Senha deve ter no m\\xEDnimo 8 caracteres.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n        style: {\n          fontSize: '0.75rem'\n        },\n        children: \"- Conter pelo menos 1 letra min\\xFAscula e mai\\xFAscula.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n        style: {\n          fontSize: '0.75rem'\n        },\n        children: \"- Conter pelo menos 1 n\\xFAmero.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n  const Formulario = ({\n    errors,\n    form,\n    handleChange,\n    handleSubmit,\n    isSubmitting,\n    showInfo,\n    setShowInfo\n  }) => {\n    _s();\n    const theme = useTheme();\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      component: \"form\",\n      onSubmit: handleSubmit,\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '1rem',\n        maxWidth: '400px',\n        margin: '0 auto',\n        marginTop: '10%',\n        padding: '2rem',\n        backgroundColor: theme.palette.background.paper\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Formul\\xE1rio de Cadastro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), inputCadastro('Nome', 'nome', 'text', /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 56\n      }, this), 'Nome', errors.nome, theme), inputCadastro('E-mail', 'email', 'email', /*#__PURE__*/_jsxDEV(EmailIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 60\n      }, this), 'Digite seu e-mail', errors.email, theme), inputCadastro('Senha', 'senha', 'password', /*#__PURE__*/_jsxDEV(LockIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 62\n      }, this), '********', errors.senha, theme), inputCadastro('Confirmação de Senha', 'confirmacaoSenha', 'password', /*#__PURE__*/_jsxDEV(LockIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 88\n      }, this), '********', errors.confirmacaoSenha, theme), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disabled: isSubmitting,\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this);\n  };\n  _s(Formulario, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n    return [useTheme];\n  });\n};\n_s2(Formulario, \"EE5UW2lP8R8nq0SdSpCOPFBKmtc=\");\n_c = Formulario;\nexport default Formulario;\nvar _c;\n$RefreshReg$(_c, \"Formulario\");","map":{"version":3,"names":["React","useState","Button","TextField","FormControl","FormLabel","FormHelperText","Typography","PersonIcon","EmailIcon","LockIcon","Paper","useTheme","jsxDEV","_jsxDEV","Fragment","_Fragment","emailsIndisponiveis","inputDadosCadastro","nome","email","senha","confirmacaoSenha","Formulario","mode","_s2","_s","$RefreshSig$","form","setForm","errors","setErrors","isSubmitting","setIsSubmitting","showInfo","setShowInfo","validate","errosDeValidacao","test","includes","length","handleChange","e","name","value","target","prevState","handleSubmit","preventDefault","validationErrors","Object","keys","response","fetch","method","headers","body","JSON","stringify","status","data","json","nomeCampo","tipoErro","alert","error","console","inputCadastro","label","type","icon","placeholder","style","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onFocus","onBlur","Boolean","InputProps","startAdornment","variant","fullWidth","helperText","fontSize","theme","elevation","component","onSubmit","display","flexDirection","gap","maxWidth","margin","marginTop","padding","backgroundColor","palette","background","paper","textAlign","disabled","color","_c","$RefreshReg$"],"sources":["C:/Users/PICHAU/testeTecnicoFrontend/cadastro-app/src/Formulario.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, TextField, FormControl, FormLabel, FormHelperText, Typography } from '@mui/material';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport LockIcon from '@mui/icons-material/Lock';\r\nimport Paper from '@mui/material/Paper';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n\r\nconst emailsIndisponiveis = [\"teste@exemplo.com\", \"joao@exemplo.com\", \"maria@acme.net\"];\r\n\r\nconst inputDadosCadastro = {\r\n    nome: '',\r\n    email: '',\r\n    senha: '',\r\n    confirmacaoSenha: '',\r\n};\r\n\r\nconst Formulario = ({ mode }) => {\r\n    const [form, setForm] = useState(inputDadosCadastro);\r\n    const [errors, setErrors] = useState({});\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [showInfo, setShowInfo] = useState(false);\r\n\r\n    const validate = () => {\r\n        const errosDeValidacao = {};\r\n\r\n        if (!form.nome) errosDeValidacao.nome = 'Nome é obrigatório';\r\n        if (!form.email) {\r\n            errosDeValidacao.email = 'E-mail é obrigatório';\r\n        } else if (!/\\S+@\\S+\\.\\S+/.test(form.email)) {\r\n            errosDeValidacao.email = 'E-mail inválido';\r\n        } else if (emailsIndisponiveis.includes(form.email)) {\r\n            errosDeValidacao.email = 'E-mail indisponível';\r\n        }\r\n\r\n        if (!form.senha) {\r\n            errosDeValidacao.senha = 'Senha é obrigatória';\r\n        } else {\r\n            if (form.senha.length < 8) errosDeValidacao.senha = 'Senha deve ter no mínimo 8 caracteres';\r\n            if (!/[a-z]/.test(form.senha)) errosDeValidacao.senha = '- Conter pelo menos 1 letra minúscula e maiúscula';\r\n            if (!/[A-Z]/.test(form.senha)) errosDeValidacao.senha = '';\r\n            if (!/[0-9]/.test(form.senha)) errosDeValidacao.senha = '- Conter pelo menos 1 número';\r\n        }\r\n\r\n        if (form.confirmacaoSenha !== form.senha) {\r\n            errosDeValidacao.confirmacaoSenha = 'Confirmação de senha deve ser igual à senha';\r\n        }\r\n\r\n        return errosDeValidacao;\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setForm(prevState => ({ ...prevState, [name]: value }));\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const validationErrors = validate();\r\n        if (Object.keys(validationErrors).length > 0) {\r\n            setErrors(validationErrors);\r\n            return;\r\n        }\r\n\r\n        setErrors({});\r\n        setIsSubmitting(true);\r\n\r\n        try {\r\n            const response = await fetch('URL_DO_BACKEND', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-api-key': 'ECA1AB4CE8583613A2C759B445E98'\r\n                },\r\n                body: JSON.stringify(form)\r\n            });\r\n\r\n            if (response.status === 400) {\r\n                const data = await response.json();\r\n                setErrors({ [data.nomeCampo]: data.tipoErro === 'USUARIO_EXISTENTE' ? 'E-mail já cadastrado' : 'Campo inválido' });\r\n            } else {\r\n                alert('Cadastro realizado com sucesso!');\r\n                setForm(inputDadosCadastro);\r\n            }\r\n        } catch (error) {\r\n            console.error('Erro na requisição:', error);\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n\r\n    const inputCadastro = (label, name, type = \"text\", icon, placeholder, error) => (\r\n        <FormControl style={{ marginBottom: '0.8rem' }}>\r\n            <FormLabel>{label}</FormLabel>\r\n            <TextField\r\n                name={name}\r\n                type={type}\r\n                value={form[name]}\r\n                onChange={handleChange}\r\n                onFocus={() => setShowInfo(name === 'senha')}\r\n                onBlur={() => setShowInfo(false)}\r\n                error={Boolean(error)}\r\n                InputProps={{\r\n                    startAdornment: icon,\r\n                }}\r\n                placeholder={placeholder}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                helperText={error}\r\n            />\r\n            {name === 'senha' && showInfo && (\r\n                <>\r\n                    <FormHelperText style={{ fontSize: '0.75rem' }}>\r\n                        - Senha deve ter no mínimo 8 caracteres.\r\n                    </FormHelperText>\r\n                    <FormHelperText style={{ fontSize: '0.75rem' }}>\r\n                        - Conter pelo menos 1 letra minúscula e maiúscula.\r\n                    </FormHelperText>\r\n                    <FormHelperText style={{ fontSize: '0.75rem' }}>\r\n                        - Conter pelo menos 1 número.\r\n                    </FormHelperText>\r\n                </>\r\n            )}\r\n        </FormControl>\r\n    );\r\n    const Formulario = ({ errors, form, handleChange, handleSubmit, isSubmitting, showInfo, setShowInfo }) => {\r\n        const theme = useTheme();\r\n    \r\n        return (\r\n            <Paper\r\n                elevation={3}\r\n                component=\"form\"\r\n                onSubmit={handleSubmit}\r\n                style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    gap: '1rem',\r\n                    maxWidth: '400px',\r\n                    margin: '0 auto',\r\n                    marginTop: '10%',\r\n                    padding: '2rem',\r\n                    backgroundColor: theme.palette.background.paper\r\n                }}\r\n            >\r\n                <Typography variant=\"h4\" component=\"h1\" style={{ textAlign: 'center' }}>\r\n                    Formulário de Cadastro\r\n                </Typography>\r\n    \r\n                {inputCadastro('Nome', 'nome', 'text', <PersonIcon />, 'Nome', errors.nome, theme)}\r\n                {inputCadastro('E-mail', 'email', 'email', <EmailIcon />, 'Digite seu e-mail', errors.email, theme)}\r\n                {inputCadastro('Senha', 'senha', 'password', <LockIcon />, '********', errors.senha, theme)}\r\n                {inputCadastro('Confirmação de Senha', 'confirmacaoSenha', 'password', <LockIcon />, '********', errors.confirmacaoSenha, theme)}\r\n    \r\n                <Button type=\"submit\" disabled={isSubmitting} variant=\"contained\" color=\"primary\">\r\n                    Cadastrar\r\n                </Button>\r\n            </Paper>\r\n        );\r\n    };\r\n}\r\n    \r\n    export default Formulario;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}