{"ast":null,"code":"import { Paper } from '@mui/material';\nimport { orange, grey } from '@mui/material/colors';\n\n// Função para gerar tokens de design com base no modo\nconst getDesign = mode => ({\n  palette: {\n    mode,\n    ...(mode === 'light' ? {\n      // Valores da paleta para o modo claro\n      primary: orange,\n      divider: orange[800],\n      text: {\n        primary: grey[800],\n        secondary: grey[700]\n      },\n      background: {\n        default: '#fff',\n        // Cor de fundo para o modo claro\n        Paper: '#fff' // Cor de fundo para o papel no modo claro\n      }\n    } : {\n      // Valores da paleta para o modo escuro\n      primary: grey,\n      divider: grey[900],\n      background: {\n        default: grey[900] // Preto para o modo escuro\n      },\n      text: {\n        primary: '#fafafa',\n        secondary: grey[500]\n      }\n    })\n  }\n});\nexport default getDesign;","map":{"version":3,"names":["Paper","orange","grey","getDesign","mode","palette","primary","divider","text","secondary","background","default"],"sources":["C:/Users/PICHAU/testeTecnicoFrontend/cadastro-app/src/Theme.jsx"],"sourcesContent":["import { Paper } from '@mui/material';\r\nimport { orange, grey } from '@mui/material/colors';\r\n\r\n// Função para gerar tokens de design com base no modo\r\nconst getDesign = (mode) => ({\r\n  palette: {\r\n    mode,\r\n    ...(mode === 'light'\r\n      ? {\r\n          // Valores da paleta para o modo claro\r\n          primary: orange,\r\n          divider: orange[800],\r\n          text: {\r\n            primary: grey[800],\r\n            secondary: grey[700],\r\n          },\r\n          background: {\r\n            default: '#fff', // Cor de fundo para o modo claro\r\n            Paper: '#fff', // Cor de fundo para o papel no modo claro\r\n          },\r\n        }\r\n      : {\r\n          // Valores da paleta para o modo escuro\r\n          primary: grey,\r\n          divider: grey[900],\r\n          background: {\r\n            default: grey[900], // Preto para o modo escuro\r\n          },\r\n          text: {\r\n            primary: '#fafafa',\r\n            secondary: grey[500],\r\n          },\r\n        }),\r\n  },\r\n});\r\n\r\nexport default getDesign;\r\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,eAAe;AACrC,SAASC,MAAM,EAAEC,IAAI,QAAQ,sBAAsB;;AAEnD;AACA,MAAMC,SAAS,GAAIC,IAAI,KAAM;EAC3BC,OAAO,EAAE;IACPD,IAAI;IACJ,IAAIA,IAAI,KAAK,OAAO,GAChB;MACE;MACAE,OAAO,EAAEL,MAAM;MACfM,OAAO,EAAEN,MAAM,CAAC,GAAG,CAAC;MACpBO,IAAI,EAAE;QACJF,OAAO,EAAEJ,IAAI,CAAC,GAAG,CAAC;QAClBO,SAAS,EAAEP,IAAI,CAAC,GAAG;MACrB,CAAC;MACDQ,UAAU,EAAE;QACVC,OAAO,EAAE,MAAM;QAAE;QACjBX,KAAK,EAAE,MAAM,CAAE;MACjB;IACF,CAAC,GACD;MACE;MACAM,OAAO,EAAEJ,IAAI;MACbK,OAAO,EAAEL,IAAI,CAAC,GAAG,CAAC;MAClBQ,UAAU,EAAE;QACVC,OAAO,EAAET,IAAI,CAAC,GAAG,CAAC,CAAE;MACtB,CAAC;MACDM,IAAI,EAAE;QACJF,OAAO,EAAE,SAAS;QAClBG,SAAS,EAAEP,IAAI,CAAC,GAAG;MACrB;IACF,CAAC;EACP;AACF,CAAC,CAAC;AAEF,eAAeC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}