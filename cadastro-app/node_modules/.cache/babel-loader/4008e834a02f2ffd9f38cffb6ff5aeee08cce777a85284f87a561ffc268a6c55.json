{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PICHAU\\\\testeTecnicoFrontend\\\\cadastro-app\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport getDesign from './Theme';\nimport Formulario from './Formulario';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [mode, setMode] = useState('light');\n\n  // Cria o tema com base no modo atual\n  const theme = React.useMemo(() => createTheme(getDesign(mode)), [mode]);\n\n  // Alterna entre modo claro e escuro\n  const handleModeChange = () => {\n    setMode(prevMode => prevMode === 'light' ? 'dark' : 'light');\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        height: '100vh',\n        width: '100vw',\n        padding: '2rem',\n        backgroundColor: theme.palette.background.default,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        style: {\n          marginBottom: '1rem'\n        },\n        children: \"Alternar Modo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleModeChange,\n        children: [\"Mudar para \", mode === 'light' ? 'Escuro' : 'Claro']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formulario, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n};\n_s(App, \"u8zjN1kWJUDh6oH/uPWW9KokeTA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ThemeProvider","createTheme","Button","getDesign","Formulario","jsxDEV","_jsxDEV","App","_s","mode","setMode","theme","useMemo","handleModeChange","prevMode","children","Paper","style","height","width","padding","backgroundColor","palette","background","default","display","flexDirection","alignItems","justifyContent","Typography","variant","component","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/PICHAU/testeTecnicoFrontend/cadastro-app/src/App.jsx"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport getDesign from './Theme';\nimport Formulario from './Formulario';\n\n\n\nconst App = () => {\n  const [mode, setMode] = useState('light');\n\n  // Cria o tema com base no modo atual\n  const theme = React.useMemo(() => createTheme(getDesign(mode)), [mode]);\n\n  // Alterna entre modo claro e escuro\n  const handleModeChange = () => {\n    setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\n  };\n\n  return (\n      <ThemeProvider theme={theme}>\n            <Paper\n                style={{\n                    height: '100vh',\n                    width: '100vw',\n                    padding: '2rem',\n                    backgroundColor: theme.palette.background.default,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                }}\n            >\n                <Typography variant=\"h4\" component=\"h1\" style={{ marginBottom: '1rem' }}>\n                    Alternar Modo\n                </Typography>\n                <Button variant=\"contained\" onClick={handleModeChange}>\n                    Mudar para {mode === 'light' ? 'Escuro' : 'Claro'}\n                </Button>\n                <Formulario />\n            </Paper>\n        </ThemeProvider>\n  );\n};\n\nexport default App;\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,EAAEC,WAAW,QAAQ,sBAAsB;AACjE,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,SAAS,MAAM,SAAS;AAC/B,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAItC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC;;EAEzC;EACA,MAAMY,KAAK,GAAGb,KAAK,CAACc,OAAO,CAAC,MAAMX,WAAW,CAACE,SAAS,CAACM,IAAI,CAAC,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;;EAEvE;EACA,MAAMI,gBAAgB,GAAGA,CAAA,KAAM;IAC7BH,OAAO,CAAEI,QAAQ,IAAMA,QAAQ,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;EAClE,CAAC;EAED,oBACIR,OAAA,CAACN,aAAa;IAACW,KAAK,EAAEA,KAAM;IAAAI,QAAA,eACtBT,OAAA,CAACU,KAAK;MACFC,KAAK,EAAE;QACHC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,OAAO;QACdC,OAAO,EAAE,MAAM;QACfC,eAAe,EAAEV,KAAK,CAACW,OAAO,CAACC,UAAU,CAACC,OAAO;QACjDC,OAAO,EAAE,MAAM;QACfC,aAAa,EAAE,QAAQ;QACvBC,UAAU,EAAE,QAAQ;QACpBC,cAAc,EAAE;MACpB,CAAE;MAAAb,QAAA,gBAEFT,OAAA,CAACuB,UAAU;QAACC,OAAO,EAAC,IAAI;QAACC,SAAS,EAAC,IAAI;QAACd,KAAK,EAAE;UAAEe,YAAY,EAAE;QAAO,CAAE;QAAAjB,QAAA,EAAC;MAEzE;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACb9B,OAAA,CAACJ,MAAM;QAAC4B,OAAO,EAAC,WAAW;QAACO,OAAO,EAAExB,gBAAiB;QAAAE,QAAA,GAAC,aACxC,EAACN,IAAI,KAAK,OAAO,GAAG,QAAQ,GAAG,OAAO;MAAA;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACT9B,OAAA,CAACF,UAAU;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAExB,CAAC;AAAC5B,EAAA,CAnCID,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAqCT,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}