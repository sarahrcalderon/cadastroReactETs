{"ast":null,"code":"import { createTheme } from '@mui/material/styles';\nimport { grey, orange } from '@mui/material/colors';\nconst getDesign = mode => createTheme({\n  palette: {\n    mode,\n    ...(mode === 'light' ? {\n      // Valores da paleta para o modo claro\n      primary: orange,\n      divider: orange[800],\n      text: {\n        primary: grey[800],\n        secondary: grey[700]\n      },\n      background: {\n        default: '#ffffff',\n        // Fundo branco no modo claro\n        paper: '#ffffff' // Fundo do papel branco no modo claro\n      }\n    } : {\n      // Valores da paleta para o modo escuro\n      primary: grey,\n      divider: grey[600],\n      background: {\n        default: grey[900],\n        // Fundo escuro no modo escuro\n        paper: grey[800] // Fundo do papel escuro no modo escuro\n      },\n      text: {\n        primary: '#e0e0e0',\n        // Texto primário claro no modo escuro\n        secondary: grey[400] // Texto secundário claro no modo escuro\n      }\n    })\n  },\n  components: {\n    MuiTextField: {\n      styleOverrides: {\n        root: {\n          '& .MuiInputBase-root': {\n            backgroundColor: mode === 'dark' ? grey[200] : '#ffffff',\n            // Cor de fundo do input\n            color: mode === 'dark' ? '#e0e0e0' : grey[800] // Cor do texto do input\n          },\n          '& .MuiInputLabel-root': {\n            color: mode === 'dark' ? grey[400] : grey[700] // Cor do rótulo do input\n          },\n          '& .MuiInput-underline:before': {\n            borderBottomColor: mode === 'dark' ? grey[600] : grey[500] // Cor da borda inferior do input\n          },\n          '& .MuiInput-underline:hover:before': {\n            borderBottomColor: mode === 'dark' ? grey[400] : grey[500] // Cor da borda inferior ao passar o mouse\n          }\n        }\n      }\n    }\n  }\n});\nexport default getDesign;","map":{"version":3,"names":["createTheme","grey","orange","getDesign","mode","palette","primary","divider","text","secondary","background","default","paper","components","MuiTextField","styleOverrides","root","backgroundColor","color","borderBottomColor"],"sources":["C:/Users/PICHAU/testeTecnicoFrontend/cadastro-app/src/Theme.jsx"],"sourcesContent":["import { createTheme } from '@mui/material/styles';\r\nimport { grey, orange } from '@mui/material/colors';\r\n\r\nconst getDesign = (mode) => createTheme({\r\n  palette: {\r\n    mode,\r\n    ...(mode === 'light'\r\n      ? {\r\n          // Valores da paleta para o modo claro\r\n          primary: orange,\r\n          divider: orange[800],\r\n          text: {\r\n            primary: grey[800],\r\n            secondary: grey[700],\r\n          },\r\n          background: {\r\n            default: '#ffffff', // Fundo branco no modo claro\r\n            paper: '#ffffff', // Fundo do papel branco no modo claro\r\n          },\r\n        }\r\n      : {\r\n          // Valores da paleta para o modo escuro\r\n          primary: grey,\r\n          divider: grey[600],\r\n          background: {\r\n            default: grey[900], // Fundo escuro no modo escuro\r\n            paper: grey[800],  // Fundo do papel escuro no modo escuro\r\n          },\r\n          text: {\r\n            primary: '#e0e0e0', // Texto primário claro no modo escuro\r\n            secondary: grey[400], // Texto secundário claro no modo escuro\r\n          },\r\n        }),\r\n  },\r\n  components: {\r\n    MuiTextField: {\r\n      styleOverrides: {\r\n        root: {\r\n          '& .MuiInputBase-root': {\r\n            backgroundColor: mode === 'dark' ? grey[200] : '#ffffff', // Cor de fundo do input\r\n            color: mode === 'dark' ? '#e0e0e0' : grey[800], // Cor do texto do input\r\n          },\r\n          '& .MuiInputLabel-root': {\r\n            color: mode === 'dark' ? grey[400] : grey[700], // Cor do rótulo do input\r\n          },\r\n          '& .MuiInput-underline:before': {\r\n            borderBottomColor: mode === 'dark' ? grey[600] : grey[500], // Cor da borda inferior do input\r\n          },\r\n          '& .MuiInput-underline:hover:before': {\r\n            borderBottomColor: mode === 'dark' ? grey[400] : grey[500], // Cor da borda inferior ao passar o mouse\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default getDesign;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,sBAAsB;AAClD,SAASC,IAAI,EAAEC,MAAM,QAAQ,sBAAsB;AAEnD,MAAMC,SAAS,GAAIC,IAAI,IAAKJ,WAAW,CAAC;EACtCK,OAAO,EAAE;IACPD,IAAI;IACJ,IAAIA,IAAI,KAAK,OAAO,GAChB;MACE;MACAE,OAAO,EAAEJ,MAAM;MACfK,OAAO,EAAEL,MAAM,CAAC,GAAG,CAAC;MACpBM,IAAI,EAAE;QACJF,OAAO,EAAEL,IAAI,CAAC,GAAG,CAAC;QAClBQ,SAAS,EAAER,IAAI,CAAC,GAAG;MACrB,CAAC;MACDS,UAAU,EAAE;QACVC,OAAO,EAAE,SAAS;QAAE;QACpBC,KAAK,EAAE,SAAS,CAAE;MACpB;IACF,CAAC,GACD;MACE;MACAN,OAAO,EAAEL,IAAI;MACbM,OAAO,EAAEN,IAAI,CAAC,GAAG,CAAC;MAClBS,UAAU,EAAE;QACVC,OAAO,EAAEV,IAAI,CAAC,GAAG,CAAC;QAAE;QACpBW,KAAK,EAAEX,IAAI,CAAC,GAAG,CAAC,CAAG;MACrB,CAAC;MACDO,IAAI,EAAE;QACJF,OAAO,EAAE,SAAS;QAAE;QACpBG,SAAS,EAAER,IAAI,CAAC,GAAG,CAAC,CAAE;MACxB;IACF,CAAC;EACP,CAAC;EACDY,UAAU,EAAE;IACVC,YAAY,EAAE;MACZC,cAAc,EAAE;QACdC,IAAI,EAAE;UACJ,sBAAsB,EAAE;YACtBC,eAAe,EAAEb,IAAI,KAAK,MAAM,GAAGH,IAAI,CAAC,GAAG,CAAC,GAAG,SAAS;YAAE;YAC1DiB,KAAK,EAAEd,IAAI,KAAK,MAAM,GAAG,SAAS,GAAGH,IAAI,CAAC,GAAG,CAAC,CAAE;UAClD,CAAC;UACD,uBAAuB,EAAE;YACvBiB,KAAK,EAAEd,IAAI,KAAK,MAAM,GAAGH,IAAI,CAAC,GAAG,CAAC,GAAGA,IAAI,CAAC,GAAG,CAAC,CAAE;UAClD,CAAC;UACD,8BAA8B,EAAE;YAC9BkB,iBAAiB,EAAEf,IAAI,KAAK,MAAM,GAAGH,IAAI,CAAC,GAAG,CAAC,GAAGA,IAAI,CAAC,GAAG,CAAC,CAAE;UAC9D,CAAC;UACD,oCAAoC,EAAE;YACpCkB,iBAAiB,EAAEf,IAAI,KAAK,MAAM,GAAGH,IAAI,CAAC,GAAG,CAAC,GAAGA,IAAI,CAAC,GAAG,CAAC,CAAE;UAC9D;QACF;MACF;IACF;EACF;AACF,CAAC,CAAC;AAEF,eAAeE,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}