{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PICHAU\\\\testeTecnicoFrontend\\\\cadastro-app\\\\src\\\\Formulario.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, TextField, FormControl, FormLabel, FormHelperText, Typography, Paper } from '@mui/material';\nimport PersonIcon from '@mui/icons-material/Person';\nimport EmailIcon from '@mui/icons-material/Email';\nimport LockIcon from '@mui/icons-material/Lock';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst emailsIndisponiveis = [\"teste@exemplo.com\", \"joao@exemplo.com\", \"maria@acme.net\"];\nconst inputDadosCadastro = {\n  nome: '',\n  email: '',\n  senha: '',\n  confirmacaoSenha: ''\n};\nconst Formulario = () => {\n  _s();\n  const [form, setForm] = useState(inputDadosCadastro);\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [showInfo, setShowInfo] = useState(false);\n  const [message, setMessage] = useState(''); // Adiciona estado para mensagem de feedback\n\n  const validate = () => {\n    const errosDeValidacao = {};\n    if (!form.nome) errosDeValidacao.nome = 'Nome é obrigatório';\n    if (!form.email) {\n      errosDeValidacao.email = 'E-mail é obrigatório';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(form.email)) {\n      errosDeValidacao.email = 'E-mail inválido';\n    } else if (emailsIndisponiveis.includes(form.email)) {\n      errosDeValidacao.email = 'E-mail indisponível';\n    }\n    if (!form.senha) {\n      errosDeValidacao.senha = 'Senha é obrigatória';\n    } else {\n      if (form.senha.length < 8) errosDeValidacao.senha = 'Senha deve ter no mínimo 8 caracteres';\n      if (!/[a-z]/.test(form.senha)) errosDeValidacao.senha += ' - Conter pelo menos 1 letra minúscula';\n      if (!/[A-Z]/.test(form.senha)) errosDeValidacao.senha += ' - Conter pelo menos 1 letra maiúscula';\n      if (!/[0-9]/.test(form.senha)) errosDeValidacao.senha += ' - Conter pelo menos 1 número';\n    }\n    if (form.confirmacaoSenha !== form.senha) {\n      errosDeValidacao.confirmacaoSenha = 'Confirmação de senha deve ser igual à senha';\n    }\n    return errosDeValidacao;\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const validationErrors = validate();\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n    setErrors({});\n    setIsSubmitting(true);\n    try {\n      const response = await fetch('URL_DO_BACKEND', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-api-key': 'ECA1AB4CE8583613A2C759B445E98'\n        },\n        body: JSON.stringify(form)\n      });\n      if (response.status === 400) {\n        const data = await response.json();\n        setErrors({\n          [data.nomeCampo]: data.tipoErro === 'USUARIO_EXISTENTE' ? 'E-mail já cadastrado' : 'Campo inválido'\n        });\n        setMessage('Erro ao realizar o cadastro.');\n      } else {\n        setMessage('Cadastro realizado com sucesso!');\n        setForm(inputDadosCadastro);\n      }\n    } catch (error) {\n      console.error('Erro na requisição:', error);\n      setMessage('Erro ao realizar o cadastro.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const inputCadastro = (label, name, type = \"text\", icon, placeholder, error) => /*#__PURE__*/_jsxDEV(FormControl, {\n    style: {\n      marginBottom: '0.8rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      name: name,\n      type: type,\n      value: form[name],\n      onChange: handleChange,\n      onFocus: () => setShowInfo(name === 'senha'),\n      onBlur: () => setShowInfo(false),\n      error: Boolean(error),\n      InputProps: {\n        startAdornment: icon\n      },\n      placeholder: placeholder,\n      variant: \"outlined\",\n      fullWidth: true,\n      helperText: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), name === 'senha' && showInfo && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FormHelperText, {\n        style: {\n          fontSize: '0.75rem'\n        },\n        children: \"- Senha deve ter no m\\xEDnimo 8 caracteres.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n        style: {\n          fontSize: '0.75rem'\n        },\n        children: \"- Conter pelo menos 1 letra min\\xFAscula e mai\\xFAscula.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n        style: {\n          fontSize: '0.75rem'\n        },\n        children: \"- Conter pelo menos 1 n\\xFAmero.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    component: \"form\",\n    onSubmit: handleSubmit,\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '1rem',\n      maxWidth: '400px',\n      margin: '0 auto',\n      marginTop: '10%',\n      padding: '2rem',\n      backgroundColor: '#fff'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Formul\\xE1rio de Cadastro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), inputCadastro('Nome', 'nome', 'text', /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 52\n    }, this), 'Nome', errors.nome), inputCadastro('E-mail', 'email', 'email', /*#__PURE__*/_jsxDEV(EmailIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 56\n    }, this), 'Digite seu e-mail', errors.email), inputCadastro('Senha', 'senha', 'password', /*#__PURE__*/_jsxDEV(LockIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 58\n    }, this), '********', errors.senha), inputCadastro('Confirmação de Senha', 'confirmacaoSenha', 'password', /*#__PURE__*/_jsxDEV(LockIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 84\n    }, this), '********', errors.confirmacaoSenha), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      disabled: isSubmitting,\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"Cadastrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      style: {\n        color: 'red',\n        textAlign: 'center',\n        marginTop: '1rem'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n};\n_s(Formulario, \"9DjIIR54LV8vCfjBE2BANZr85iY=\");\n_c = Formulario;\nexport default Formulario;\nvar _c;\n$RefreshReg$(_c, \"Formulario\");","map":{"version":3,"names":["React","useState","Button","TextField","FormControl","FormLabel","FormHelperText","Typography","Paper","PersonIcon","EmailIcon","LockIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","emailsIndisponiveis","inputDadosCadastro","nome","email","senha","confirmacaoSenha","Formulario","_s","form","setForm","errors","setErrors","isSubmitting","setIsSubmitting","showInfo","setShowInfo","message","setMessage","validate","errosDeValidacao","test","includes","length","handleChange","e","name","value","target","prevState","handleSubmit","preventDefault","validationErrors","Object","keys","response","fetch","method","headers","body","JSON","stringify","status","data","json","nomeCampo","tipoErro","error","console","inputCadastro","label","type","icon","placeholder","style","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onFocus","onBlur","Boolean","InputProps","startAdornment","variant","fullWidth","helperText","fontSize","elevation","component","onSubmit","display","flexDirection","gap","maxWidth","margin","marginTop","padding","backgroundColor","textAlign","disabled","color","_c","$RefreshReg$"],"sources":["C:/Users/PICHAU/testeTecnicoFrontend/cadastro-app/src/Formulario.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, TextField, FormControl, FormLabel, FormHelperText, Typography, Paper } from '@mui/material';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport LockIcon from '@mui/icons-material/Lock';\r\n\r\nconst emailsIndisponiveis = [\"teste@exemplo.com\", \"joao@exemplo.com\", \"maria@acme.net\"];\r\n\r\nconst inputDadosCadastro = {\r\n    nome: '',\r\n    email: '',\r\n    senha: '',\r\n    confirmacaoSenha: '',\r\n};\r\n\r\nconst Formulario = () => {\r\n    const [form, setForm] = useState(inputDadosCadastro);\r\n    const [errors, setErrors] = useState({});\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [showInfo, setShowInfo] = useState(false);\r\n    const [message, setMessage] = useState(''); // Adiciona estado para mensagem de feedback\r\n\r\n    const validate = () => {\r\n        const errosDeValidacao = {};\r\n\r\n        if (!form.nome) errosDeValidacao.nome = 'Nome é obrigatório';\r\n        if (!form.email) {\r\n            errosDeValidacao.email = 'E-mail é obrigatório';\r\n        } else if (!/\\S+@\\S+\\.\\S+/.test(form.email)) {\r\n            errosDeValidacao.email = 'E-mail inválido';\r\n        } else if (emailsIndisponiveis.includes(form.email)) {\r\n            errosDeValidacao.email = 'E-mail indisponível';\r\n        }\r\n\r\n        if (!form.senha) {\r\n            errosDeValidacao.senha = 'Senha é obrigatória';\r\n        } else {\r\n            if (form.senha.length < 8) errosDeValidacao.senha = 'Senha deve ter no mínimo 8 caracteres';\r\n            if (!/[a-z]/.test(form.senha)) errosDeValidacao.senha += ' - Conter pelo menos 1 letra minúscula';\r\n            if (!/[A-Z]/.test(form.senha)) errosDeValidacao.senha += ' - Conter pelo menos 1 letra maiúscula';\r\n            if (!/[0-9]/.test(form.senha)) errosDeValidacao.senha += ' - Conter pelo menos 1 número';\r\n        }\r\n\r\n        if (form.confirmacaoSenha !== form.senha) {\r\n            errosDeValidacao.confirmacaoSenha = 'Confirmação de senha deve ser igual à senha';\r\n        }\r\n\r\n        return errosDeValidacao;\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setForm(prevState => ({ ...prevState, [name]: value }));\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const validationErrors = validate();\r\n        if (Object.keys(validationErrors).length > 0) {\r\n            setErrors(validationErrors);\r\n            return;\r\n        }\r\n\r\n        setErrors({});\r\n        setIsSubmitting(true);\r\n\r\n        try {\r\n            const response = await fetch('URL_DO_BACKEND', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-api-key': 'ECA1AB4CE8583613A2C759B445E98'\r\n                },\r\n                body: JSON.stringify(form)\r\n            });\r\n\r\n            if (response.status === 400) {\r\n                const data = await response.json();\r\n                setErrors({ [data.nomeCampo]: data.tipoErro === 'USUARIO_EXISTENTE' ? 'E-mail já cadastrado' : 'Campo inválido' });\r\n                setMessage('Erro ao realizar o cadastro.');\r\n            } else {\r\n                setMessage('Cadastro realizado com sucesso!');\r\n                setForm(inputDadosCadastro);\r\n            }\r\n        } catch (error) {\r\n            console.error('Erro na requisição:', error);\r\n            setMessage('Erro ao realizar o cadastro.');\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n\r\n    const inputCadastro = (label, name, type = \"text\", icon, placeholder, error) => (\r\n        <FormControl style={{ marginBottom: '0.8rem' }}>\r\n            <FormLabel>{label}</FormLabel>\r\n            <TextField\r\n                name={name}\r\n                type={type}\r\n                value={form[name]}\r\n                onChange={handleChange}\r\n                onFocus={() => setShowInfo(name === 'senha')}\r\n                onBlur={() => setShowInfo(false)}\r\n                error={Boolean(error)}\r\n                InputProps={{\r\n                    startAdornment: icon,\r\n                }}\r\n                placeholder={placeholder}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                helperText={error}\r\n            />\r\n            {name === 'senha' && showInfo && (\r\n                <>\r\n                    <FormHelperText style={{ fontSize: '0.75rem' }}>\r\n                        - Senha deve ter no mínimo 8 caracteres.\r\n                    </FormHelperText>\r\n                    <FormHelperText style={{ fontSize: '0.75rem' }}>\r\n                        - Conter pelo menos 1 letra minúscula e maiúscula.\r\n                    </FormHelperText>\r\n                    <FormHelperText style={{ fontSize: '0.75rem' }}>\r\n                        - Conter pelo menos 1 número.\r\n                    </FormHelperText>\r\n                </>\r\n            )}\r\n        </FormControl>\r\n    );\r\n\r\n    return (\r\n        <Paper\r\n            elevation={3}\r\n            component=\"form\"\r\n            onSubmit={handleSubmit}\r\n            style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                gap: '1rem',\r\n                maxWidth: '400px',\r\n                margin: '0 auto',\r\n                marginTop: '10%',\r\n                padding: '2rem',\r\n                backgroundColor: '#fff'\r\n            }}\r\n        >\r\n            <Typography variant=\"h4\" component=\"h1\" style={{ textAlign: 'center' }}>\r\n                Formulário de Cadastro\r\n            </Typography>\r\n\r\n            {inputCadastro('Nome', 'nome', 'text', <PersonIcon />, 'Nome', errors.nome)}\r\n            {inputCadastro('E-mail', 'email', 'email', <EmailIcon />, 'Digite seu e-mail', errors.email)}\r\n            {inputCadastro('Senha', 'senha', 'password', <LockIcon />, '********', errors.senha)}\r\n            {inputCadastro('Confirmação de Senha', 'confirmacaoSenha', 'password', <LockIcon />, '********', errors.confirmacaoSenha)}\r\n\r\n            <Button type=\"submit\" disabled={isSubmitting} variant=\"contained\" color=\"primary\">\r\n                Cadastrar\r\n            </Button>\r\n\r\n            {/* Exibe a mensagem de feedback */}\r\n            {message && (\r\n                <Typography variant=\"body1\" style={{ color: 'red', textAlign: 'center', marginTop: '1rem' }}>\r\n                    {message}\r\n                </Typography>\r\n            )}\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default Formulario;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}